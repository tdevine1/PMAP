/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.11.v20150529
 * Generated at: 2016-04-30 17:02:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class studentSite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Samuel/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("file:/C:/Users/Samuel/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1459809391504L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title>PM Assessment</title>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/dojo/1.10.4/dijit/themes/claro/claro.css\" > \n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("html, body { \n");
      out.write("    height: 100%; \n");
      out.write("    margin: 0; \n");
      out.write("    overflow: hidden; \n");
      out.write("    padding: 0; \n");
      out.write("} \n");
      out.write("\n");
      out.write("#appLayout { \n");
      out.write("    height: 100%; \n");
      out.write("} \n");
      out.write("#leftCol { \n");
      out.write("    width: 14em; \n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write(" <script src=\"http://ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojo/dojo.js\"     \n");
      out.write("    data-dojo-config=\"parseOnLoad: true\">\n");
      out.write(" </script>  \n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    dojo.require(\"dojo.parser\");\n");
      out.write("    dojo.require(\"dojo.query\");\n");
      out.write("    dojo.require(\"dojo.dom-attr\");\n");
      out.write("    dojo.require(\"dojo.ready\");\n");
      out.write("    dojo.require(\"dijit.layout.BorderContainer\");\n");
      out.write("    dojo.require(\"dijit.layout.TabContainer\");\n");
      out.write("    dojo.require(\"dijit.layout.ContentPane\");\n");
      out.write("    \n");
      out.write("    var groups = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.Groups}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\",\");\n");
      out.write("    var groupMembers = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.GroupMembers}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\"%\");\n");
      out.write("    var name = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.Name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("    var welcome = \"Hello, \".concat(name);\n");
      out.write("    var username = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("    var map = {};\n");
      out.write("    for(i = 0; i<groups.length; i++){\n");
      out.write("        var members = groupMembers[i].split(\",\");\n");
      out.write("        console.log(members);\n");
      out.write("        map[groups[i]] = members;\n");
      out.write("    }\n");
      out.write("    var peerEvalOf;\n");
      out.write("    var selectedGroup;\n");
      out.write("    \n");
      out.write("     dojo.ready(function(){\n");
      out.write("        dojo.byId(\"header\").innerHTML = welcome;\n");
      out.write("        for(i=0; i < groups.length; i++){\n");
      out.write("            var buttonId = groups[i].replace(\" \",\"\");\n");
      out.write("            var nodePath = \"<button id='\".concat(buttonId.concat(\"' type='button'></button>\"));\n");
      out.write("            var gName = groups[i];\n");
      out.write("            dojo.place(nodePath, \"groupContainer\", \"after\");\n");
      out.write("            new dijit.form.Button({\n");
      out.write("                label: groups[i],\n");
      out.write("                title: groups[i],\n");
      out.write("                name: gName,\n");
      out.write("                onClick: function(event){\n");
      out.write("                    var button = dijit.registry.getEnclosingWidget(event.target);\n");
      out.write("                    selectedGroup = button.name;\n");
      out.write("                    createAssessmentButtons(map[gName]);}\n");
      out.write("            }, buttonId).startup();\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("    function createAssessmentButtons(gMembers){\n");
      out.write("        var node = dojo.byId(\"assessmentButtonContainer\");\n");
      out.write("        while(node.hasChildNodes()){\n");
      out.write("            node.destory(true);\n");
      out.write("        }\n");
      out.write("        dojo.byId(\"assessmentButtonContainer\").innerHTML = \"\";\n");
      out.write("        console.log(gMembers);\n");
      out.write("        for(i=0;i < gMembers.length; i++){\n");
      out.write("            if(gMembers[i].trim() != \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.Name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"){\n");
      out.write("                var gMember = gMembers[i];\n");
      out.write("                var buttonId = gMember.replace(\" \",\"\").concat(\"PeerAseessment\");\n");
      out.write("                var nodePath = \"<button id='\".concat(buttonId.concat(\"' type='button'></button>\"));\n");
      out.write("                dojo.place(nodePath, \"assessmentButtonContainer\", \"after\");\n");
      out.write("                new dijit.form.Button({\n");
      out.write("                    label: \"Peer Assessment of \".concat(gMember.trim()),\n");
      out.write("                    title: \"peerAssessment\",\n");
      out.write("                    name: gMember,\n");
      out.write("                    onClick: function(event){var button = dijit.registry.getEnclosingWidget(event.target);\n");
      out.write("                        peerEvalOf = button.name;\n");
      out.write("                        setAssessmentButtonEvent(button.title);}\n");
      out.write("                }, buttonId).startup();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        var buttonId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.Name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".replace(\" \",\"\").concat(\"SelfEval\");\n");
      out.write("        var nodePath = \"<button id='\".concat(buttonId.concat(\"' type='button'></button>\"));\n");
      out.write("        dojo.place(nodePath, \"assessmentButtonContainer\", \"after\");\n");
      out.write("        new dijit.form.Button({\n");
      out.write("            label: \"Self Evaluation\",\n");
      out.write("            title: \"selfAssessment\",\n");
      out.write("            onClick: function(event){var button = dijit.registry.getEnclosingWidget(event.target);\n");
      out.write("                setAssessmentButtonEvent(button.title)}\n");
      out.write("        }, buttonId).startup();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function setAssessmentButtonEvent(type){\n");
      out.write("        console.log(type);\n");
      out.write("        if(type == \"peerAssessment\"){\n");
      out.write("            dojo.place(\"<iframe id='assessmentDiv' src='/PMA/peer' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\n");
      out.write("        }\n");
      out.write("        else if(type == \"selfAssessment\"){\n");
      out.write("            dojo.place(\"<iframe id='assessmentDiv' src='/PMA/self' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\n");
      out.write("        }\n");
      out.write("        else{\n");
      out.write("            console.log(\"Nothing here\");\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("   // dojo.ready(function(){\n");
      out.write("        \n");
      out.write("   // });\n");
      out.write("   \n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"claro\">\n");
      out.write("    <div id=\"appLayout\" class=\"demoLayout\"\n");
      out.write("        data-dojo-type=\"dijit.layout.BorderContainer\"\n");
      out.write("        data-dojo-props=\"design: 'headline'\">\n");
      out.write("        <div class=\"centerPanel\" data-dojo-type=\"dijit.layout.ContentPane\"\n");
      out.write("             data-dojo-props=\"region: 'center'\">\n");
      out.write("            <div id=\"groupContainer\"></div>\n");
      out.write("            <div id=\"assessmentButtonContainer\"></div>\n");
      out.write("            <div id=\"assessmentDiv\"></div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"header\" class=\"edgePanel\" data-dojo-type=\"dijit.layout.ContentPane\"\n");
      out.write("            data-dojo-props=\"region: 'top'\">STUFF</div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
