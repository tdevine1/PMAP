/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.11.v20150529
 * Generated at: 2016-05-08 19:32:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class instructorSite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Samuel/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("file:/C:/Users/Samuel/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1459809391504L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>PM Assessment</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/dojo/1.10.4/dijit/themes/claro/claro.css\" >\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("html, body { \r\n");
      out.write("    height: 100%;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0; \r\n");
      out.write("    overflow: hidden; \r\n");
      out.write("    padding: 0; \r\n");
      out.write("    background-color: #860038;\r\n");
      out.write("} \r\n");
      out.write("#appLayout { \r\n");
      out.write("    height: 100%; \r\n");
      out.write("} \r\n");
      out.write("#leftCol { \r\n");
      out.write("    width: 14em; \r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write(" <script src=\"http://ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojo/dojo.js\"     \r\n");
      out.write("    data-dojo-config=\"parseOnLoad: true\">\r\n");
      out.write(" </script>  \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    dojo.require(\"dojo.parser\");\r\n");
      out.write("    dojo.require(\"dojo.query\");\r\n");
      out.write("    dojo.require(\"dojo.dom-attr\");\r\n");
      out.write("    dojo.require(\"dojo.on\");\r\n");
      out.write("    dojo.require(\"dojo.ready\");\r\n");
      out.write("    dojo.require(\"dijit.layout.BorderContainer\");\r\n");
      out.write("    dojo.require(\"dijit.layout.TabContainer\");\r\n");
      out.write("    dojo.require(\"dijit.layout.ContentPane\");\r\n");
      out.write("    dojo.require(\"dijit.form.Button\");\r\n");
      out.write("    dojo.require(\"dijit.registry\");\r\n");
      out.write("    dojo.require(\"dojox.grid.DataGrid\");\r\n");
      out.write("    dojo.require(\"dojo.store.Memory\");\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    var classes = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.classes}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\",\");\r\n");
      out.write("    var assessments = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.assessments}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\",\");\r\n");
      out.write("    var welcome = \"Hello, \".concat(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.FirstName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".concat(\" \".concat(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.LastName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\")));\r\n");
      out.write("    var flag = true;\r\n");
      out.write("    var username;\r\n");
      out.write("    var selectedGroupId;\r\n");
      out.write("    var selectedGroup;\r\n");
      out.write("    var peerEvalOf;\r\n");
      out.write("    var cid;\r\n");
      out.write("    var name;\r\n");
      out.write("    var memberString;\r\n");
      out.write("    var role;\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    dojo.ready(function(){\r\n");
      out.write("        dojo.byId(\"header\").innerHTML = welcome;\r\n");
      out.write("        for(i=0; i< classes.length; i++){\r\n");
      out.write("            var buttonId = classes[i].replace(\" \",\"\");\r\n");
      out.write("            var nodePath = \"<button id='\".concat(buttonId.concat(\"' type='button'></button>\"));\r\n");
      out.write("            dojo.place(nodePath, \"courseContainer\", \"after\");\r\n");
      out.write("            new dijit.form.Button({\r\n");
      out.write("                label: classes[i],\r\n");
      out.write("                title: classes[i],\r\n");
      out.write("                onClick: function(event){\r\n");
      out.write("                    var button = dijit.registry.getEnclosingWidget(event.target);\r\n");
      out.write("                    document.getElementById(\"courseIdent\").innerHTML = \"Course:\".concat(button.label);\r\n");
      out.write("                    cid = button.label;\r\n");
      out.write("                    dojo.xhrPost({\r\n");
      out.write("                        url: \"/PMA/instructor/groupsForClass\",\r\n");
      out.write("                        handleAs: \"json\",\r\n");
      out.write("                        content:{\r\n");
      out.write("                          \"course\": button.id\r\n");
      out.write("                        },\r\n");
      out.write("                        load:populateSelect});}\r\n");
      out.write("            }, buttonId).startup();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    function populateSelect(response){\r\n");
      out.write("        emptySelect(response.selectId);\r\n");
      out.write("        console.log(response.selectId);\r\n");
      out.write("        var sel = document.getElementById(response.selectId);\r\n");
      out.write("        if(response.selectId == \"groups\"){\r\n");
      out.write("            for(i = 0; i < response.groups.length; i++){\r\n");
      out.write("                var opt = document.createElement(\"option\");\r\n");
      out.write("                opt.value = response.gids[i];\r\n");
      out.write("                opt.text = response.groups[i];\r\n");
      out.write("                sel.add(opt);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        else if(response.selectId == \"members\"){\r\n");
      out.write("            for(i = 0; i < response.ucas.length; i++){\r\n");
      out.write("                var opt = document.createElement(\"option\");\r\n");
      out.write("                opt.value = response.ucas[i];\r\n");
      out.write("                opt.text = response.names[i];\r\n");
      out.write("                sel.add(opt);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function emptySelect(id){\r\n");
      out.write("        var sel = document.getElementById(id);\r\n");
      out.write("        for(i = 1; i < sel.length;){\r\n");
      out.write("            sel.remove(i);\r\n");
      out.write("        }     \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function emptyButtonContainer(){\r\n");
      out.write("        var div = document.getElementById(\"buttonContainer\");\r\n");
      out.write("        while (div.hasChildNodes()) {\r\n");
      out.write("            div.removeChild(div.firstChild);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function setAssessmentButtonEvent(type, label){\r\n");
      out.write("        if(type == 2){\r\n");
      out.write("            peerEvalOf = label.replace(\"PeerEvalOf \", \"\");\r\n");
      out.write("            dojo.place(\"<iframe id='assessmentDiv' src='/PMA/peer' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\r\n");
      out.write("        }\r\n");
      out.write("        else if(type == 1){\r\n");
      out.write("            dojo.place(\"<iframe id='assessmentDiv' src='/PMA/self' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            console.log(\"Nothing here\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function getPasswords(){\r\n");
      out.write("        dojo.place(\"<iframe id='assessmentDiv' src='/PMA/instructor/groupInfo' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function getTable(){\r\n");
      out.write("        dojo.place(\"<iframe id='assessmentDiv' src='/PMA/instructor/weightedGradeTable' style='height:100%;width:100%;'></iframe>\", \"assessmentDiv\", \"replace\");\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function groupChangeEvent(){\r\n");
      out.write("        selectedGroupId = document.getElementById(\"groups\").value;\r\n");
      out.write("        selectedGroup = document.getElementById(\"groups\").options[document.getElementById(\"groups\").selectedIndex].text;\r\n");
      out.write("        console.log(selectedGroup);\r\n");
      out.write("        if(selectedGroupId != \"placehold\"){\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/membersForGroup\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"gid\": selectedGroupId\r\n");
      out.write("                },\r\n");
      out.write("                load:populateSelect});\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function addGroup(){\r\n");
      out.write("        var newGroup = document.getElementById(\"addGroupInput\").value;\r\n");
      out.write("        if(newGroup.trim() != \"\"){\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/newGroup\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"group\": newGroup,\r\n");
      out.write("                    \"cid\": cid\r\n");
      out.write("                },\r\n");
      out.write("                load:populateSelect});\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function addMember(){\r\n");
      out.write("        if(document.getElementById(\"pm\").checked){\r\n");
      out.write("            role = \"PM\";\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            role = \"DEV\";\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        memberString = document.getElementById(\"addMemberInput\").value;\r\n");
      out.write("        if(memberString.trim() != \"\"){\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/ucaExistCheck\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"ucas\": memberString\r\n");
      out.write("                },\r\n");
      out.write("                load:handleExistResponse});\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function handleExistResponse(response){\r\n");
      out.write("        if(response.error == \"y\"){\r\n");
      out.write("            alert(\"ERROR ENCOUNTERED ADDING MEMBERS!! PROCESS ABANDONED!!\");\r\n");
      out.write("        }\r\n");
      out.write("        console.log(response);\r\n");
      out.write("        var newUCAs = \"\";\r\n");
      out.write("        var newNames = \"\";\r\n");
      out.write("        if(response.ucas.length != 0){\r\n");
      out.write("            for(i = 0; i< response.ucas.length; i++){\r\n");
      out.write("                if(newUCAs == \"\"){newUCAs = response.ucas[i].trim();}\r\n");
      out.write("                else{newUCAs = newUCAs.concat(\",\".concat(response.ucas[i].trim()));}\r\n");
      out.write("                if(newNames == \"\"){newNames = prompt(\"Enter first and last name for \".concat(response.ucas[i].trim()).concat(\". (Separate names with one whitespace)\"),\"\");}\r\n");
      out.write("                else{newNames = newNames.concat(\",\".concat(prompt(\"Enter first and last name for \".concat(response.ucas[i].trim()).concat(\". (Separate names with one whitespace)\"),\"\")));}\r\n");
      out.write("            }\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/newUCAs\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"ucas\": newUCAs,\r\n");
      out.write("                    \"names\": newNames\r\n");
      out.write("                },\r\n");
      out.write("                load: insertToGroup\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            insertToGroup(true)\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    function insertToGroup(response){\r\n");
      out.write("        console.log(response);\r\n");
      out.write("        if(response == true){\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/addMembers\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"gid\": selectedGroupId,\r\n");
      out.write("                    \"role\": role,\r\n");
      out.write("                    \"ucas\": memberString\r\n");
      out.write("                },\r\n");
      out.write("                load: populateSelect\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            alert(\"ERROR ENCOUNTERED ADDING NEW USERS!! PROCESS ABANDONED!!\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function memberSelectEvent(){\r\n");
      out.write("        name = document.getElementById(\"members\").options[document.getElementById(\"members\").selectedIndex].text;\r\n");
      out.write("        username = document.getElementById(\"members\").value;\r\n");
      out.write("        //console.log(name);\r\n");
      out.write("        //console.log(username);\r\n");
      out.write("        //console.log(selectedGroupId);\r\n");
      out.write("        emptyButtonContainer();\r\n");
      out.write("        if(username != \"placehold\"){\r\n");
      out.write("            dojo.xhrPost({\r\n");
      out.write("                url: \"/PMA/instructor/assessmentsTaken\",\r\n");
      out.write("                handleAs: \"json\",\r\n");
      out.write("                content:{\r\n");
      out.write("                    \"name\": name,\r\n");
      out.write("                    \"uca\": username,\r\n");
      out.write("                    \"gid\": selectedGroupId\r\n");
      out.write("                },\r\n");
      out.write("                load:createAssessmentButtons});\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function createAssessmentButtons(response){\r\n");
      out.write("        //console.log(response);\r\n");
      out.write("        for(i=0;i<response.aids.length; i++){\r\n");
      out.write("            //var buttonId = classAssessments[i].replace(\" \",\"\").concat(i);\r\n");
      out.write("            var nodePath = \"<button id='\".concat(response.assessmentNames[i].replace(\" \",\"\").concat(\"' type='button'></button>\"));\r\n");
      out.write("            dojo.place(nodePath, \"buttonContainer\", \"after\");\r\n");
      out.write("            new dijit.form.Button({\r\n");
      out.write("                label: response.assessmentNames[i],\r\n");
      out.write("                title: response.aids[i],\r\n");
      out.write("                onClick: function(event){var button = dijit.registry.getEnclosingWidget(event.target);\r\n");
      out.write("                    setAssessmentButtonEvent(button.title, button.label);\r\n");
      out.write("                }\r\n");
      out.write("            }, response.assessmentNames[i].replace(\" \",\"\")).startup();      \r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"claro\">\r\n");
      out.write("    <div id=\"appLayout\" class=\"demoLayout\"\r\n");
      out.write("        data-dojo-type=\"dijit.layout.BorderContainer\"\r\n");
      out.write("        data-dojo-props=\"design: 'headline'\">\r\n");
      out.write("        <div class=\"centerPanel\" data-dojo-type=\"dijit.layout.ContentPane\"\r\n");
      out.write("             data-dojo-props=\"region: 'center'\">\r\n");
      out.write("            <div id=\"courseContainer\" style=\"width:100%; height:10;\"></div>\r\n");
      out.write("            <div id=\"buttonContainer\" style=\"width:100%; height:10;\"></div>\r\n");
      out.write("            <div id='assessmentDiv'></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"header\" class=\"edgePanel\" data-dojo-type=\"dijit.layout.ContentPane\"\r\n");
      out.write("            data-dojo-props=\"region: 'top'\">Header</div>\r\n");
      out.write("        <div id=\"leftCol\" class=\"edgePanel\"\r\n");
      out.write("            data-dojo-type=\"dijit.layout.ContentPane\"\r\n");
      out.write("            data-dojo-props=\"region: 'right', splitter: true\">\r\n");
      out.write("            <div style=\"height: 10%;\">\r\n");
      out.write("                <div>Tools</div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <button onclick=\"getPasswords();\" title=\"Get Passwords for Selected Groups Members\">Passwords</button>\r\n");
      out.write("                    <button onclick=\"getTable();\" title=\"Weighted Presentation Grading Table\">Presentation Grade</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div style=\"height: 45%; position: relative;\">\r\n");
      out.write("                <div id=\"courseIdent\">Course:</div>\r\n");
      out.write("                <div>Groups</div>\r\n");
      out.write("                <div id=\"groupList\">\r\n");
      out.write("                    <select id=\"groups\" onchange=\"groupChangeEvent();\">\r\n");
      out.write("                        <option value=\"placehold\">Select Group From Class</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div style=\"height: 15%; position: absolute; bottom: 0; left: 0;\">\r\n");
      out.write("                    <input id=\"addGroupInput\" type=\"text\" placeholder=\"Group To Add to Course\">\r\n");
      out.write("                    <button onclick=\"addGroup();\">Add Group To Course</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div style=\"height: 45%; position: relative;\">\r\n");
      out.write("                <div>Students in Selected Group</div>\r\n");
      out.write("                <div id=\"memberList\" onchange=\"memberSelectEvent()\">\r\n");
      out.write("                    <select id=\"members\">\r\n");
      out.write("                        <option value=\"placehold\">Select Member From Group</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div style=\"height: 30%; position: absolute; bottom: 0; left: 0;\" >\r\n");
      out.write("                    <input id=\"addMemberInput\" type=\"text\" placeholder=\"Add members to group\" title=\"enter ucas, for mutliple entries separate them by comma\">\r\n");
      out.write("                    <button onclick=\"addMember();\">Add Members To Group</button><br>\r\n");
      out.write("                    <input id=\"pm\" type=\"radio\" name=\"role\" value=\"PM\" checked>Project Manager<br>\r\n");
      out.write("                    <input id=\"dev\" type=\"radio\" name=\"role\" value=\"DEV\">Developer<br>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
